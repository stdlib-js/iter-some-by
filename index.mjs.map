{"version":3,"file":"index.mjs","sources":["../lib/main.js","../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isIteratorLike = require( '@stdlib/assert-is-iterator-like' );\nvar isFunction = require( '@stdlib/assert-is-function' );\nvar isPositiveInteger = require( '@stdlib/assert-is-positive-integer' ).isPrimitive;\nvar format = require( '@stdlib/string-format' );\n\n\n// MAIN //\n\n/**\n* Tests whether at least `n` iterated values pass a test implemented by a predicate function.\n*\n* @param {Iterator} iterator - input iterator\n* @param {PositiveInteger} n - number of successful values\n* @param {Function} predicate - predicate function\n* @param {*} [thisArg] - execution context\n* @throws {TypeError} first argument must be an iterator\n* @throws {TypeError} second argument must be a positive integer\n* @throws {TypeError} third argument must be a function\n* @returns {boolean} boolean indicating whether at least `n` iterated values pass a test implemented by a predicate function\n*\n* @example\n* var array2iterator = require( '@stdlib/array-to-iterator' );\n*\n* function predicate( v ) {\n*     return ( v > 0 );\n* }\n*\n* var it = array2iterator( [ 1, 1, 0, 0, 1 ] );\n*\n* var bool = iterSomeBy( it, 3, predicate );\n* // returns true\n*/\nfunction iterSomeBy( iterator, n, predicate, thisArg ) {\n\tvar count;\n\tvar v;\n\tvar i;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an iterator. Value: `%s`.', iterator ) );\n\t}\n\tif ( !isPositiveInteger( n ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a positive integer. Value: `%s`.', n ) );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tcount = 0;\n\ti = -1;\n\twhile ( true ) {\n\t\ti += 1;\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\treturn false;\n\t\t}\n\t\tif ( predicate.call( thisArg, v.value, i ) ) {\n\t\t\tcount += 1;\n\t\t\tif ( count === n ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterSomeBy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test whether at least `n` iterated values pass a test implemented by a predicate function.\n*\n* @module @stdlib/iter-some-by\n*\n* @example\n* var array2iterator = require( '@stdlib/array-to-iterator' );\n* var iterSomeBy = require( '@stdlib/iter-some-by' );\n*\n* function predicate( v ) {\n*     return ( v > 0 );\n* }\n*\n* var it = array2iterator( [ 1, 1, 0, 0, 1 ] );\n*\n* var bool = iterSomeBy( it, 3, predicate );\n* // returns true\n*/\n\n// MODULES //\n\nvar iterSomeBy = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = iterSomeBy;\n"],"names":["isIteratorLike","require$$0","isFunction","require$$1","isPositiveInteger","require$$2","isPrimitive","format","require$$3","lib","iterator","n","predicate","thisArg","count","v","i","TypeError","next","done","call","value"],"mappings":";;gWAsBA,IAAIA,EAAiBC,EACjBC,EAAaC,EACbC,EAAoBC,EAAgDC,YACpEC,EAASC,EA8Db,ICzCAC,EDQA,SAAqBC,EAAUC,EAAGC,EAAWC,GAC5C,IAAIC,EACAC,EACAC,EACJ,IAAMhB,EAAgBU,GACrB,MAAM,IAAIO,UAAWV,EAAQ,qEAAsEG,IAEpG,IAAMN,EAAmBO,GACxB,MAAM,IAAIM,UAAWV,EAAQ,6EAA8EI,IAE5G,IAAMT,EAAYU,GACjB,MAAM,IAAIK,UAAWV,EAAQ,oEAAqEK,IAInG,IAFAE,EAAQ,EACRE,GAAK,IACU,CAGd,GAFAA,GAAK,GACLD,EAAIL,EAASQ,QACNC,KACN,OAAO,EAER,GAAKP,EAAUQ,KAAMP,EAASE,EAAEM,MAAOL,KACtCF,GAAS,KACMH,EACd,OAAO"}